AWSTemplateFormatVersion: "2010-09-09"
Resources:
  StaticWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  LoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LoggingBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontLogs
            Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action:
              - "s3:PutObject"
            Resource: !Sub "arn:aws:s3:::${LoggingBucket}/*"
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticWebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: CloudFrontAccess
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${StaticWebsiteBucket}/*"

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "Access for ${AWS::StackName} CloudFront distribution"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - LoggingBucket
      - LoggingBucketPolicy
    Properties:
      DistributionConfig:
        Enabled: true
        Origins:
          - DomainName: !GetAtt StaticWebsiteBucket.DomainName
            Id: StaticWebsiteOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"
        DefaultCacheBehavior:
          TargetOriginId: StaticWebsiteOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        # Logging:
        #   Bucket: !GetAtt LoggingBucket.DomainName
        #   Prefix: "cloudfront-logs/"
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

Outputs:
  WebsiteBucketName:
    Description: The name of the S3 bucket for the static website
    Value: !Ref StaticWebsiteBucket

  CloudFrontDistributionURL:
    Description: The URL of the CloudFront distribution
    Value: !Sub "https://${CloudFrontDistribution.DomainName}"
